    <section id="headerSection">
        <h1><a href="<%= origin %>"><%= siteName %></a></h1>
        <h2>View and edit your image metadata.</h2>
        <p>Built using the excellent <a href="https://exiftool.org" target="_blank">Exiftool</a> by Phil Harvey, this app lets you inspect the metadata tags embedded in your image files, edit existing tags, or remove the metadata entirely.</p>
        <p>There are hundreds of different possible metadata tags that may be embedded within an image, or there may be almost none. It really depends on what generated the image, what types of publishing systems processed the file, who created or edited the image, and who owns it, and what usage restrictions they have placed upon it.</p>
        <p>Broadly speaking, metadata tags present in an image file may contain location data from where a photograph was taken (<a href="https://iptc.org/standards/photo-metadata/photo-metadata/" target="_blank">IPTC</a>), technical details about the type of camera and lens system used to capture a photo (<a href="https://en.wikipedia.org/wiki/Exif" target="_blank">EXIF</a>), exposure and lighting conditions, and developing and editing steps taken in an application such as Adobe Lightroom (<a href="https://www.adobe.com/devnet/xmp.html" target="_blank">XMP</a>).</p>
        <p><em class="dont">Don't be surprised if you don't see anything interesting here</em>.  More often than not, there may be very little metadata included in a file.  Modern camera systems like those found in iPhones and Android phones have settings, that when enabled, may automatically strip most of the sensitive details (like location data) when you upload a photo from their respective photos apps.</p>
         <p>For a detailed example of what could be embedded within an image file, check out this <a href="https://exif-inspector.com/review/IPTC-PhotometadataRef-Std2021.1.jpg#step3" target="_blank">official IPTC photo data reference image</a>.</p>
         <p>Exif-Inspector is also able to extract Adobe develop and preset values from an image file (if they are present) and provide you with a link to download a .xmp file which can be used as a presets file.</p>
        <% if (flash?.info) { %>
        <div id="info" class="info">
            <span><%= flash.info %></span>
        </div>
        <% } %>
        <% if (flash?.message) { %>
        <div id="messages" class="messages">
            <span><%= flash.message %></span>
        </div>
        <% } %>
        <% if (flash?.error) { %>
        <div id="errors" class="errors">
            <span><%= flash.error %></span>
        </div>
        <% } %>
        <% if (isAuthenticated) { %>

        <% } %>
    </section>
    <section id="formSection">
        
        <form id="uploaderId" name="uploader" action="<%= origin %>upload" method="POST" enctype="multiplart/form-data">
            <h3 id="step1">Step 1: First, choose the type of metadata you want to inspect.</h3>
            <fieldset id="hiddenFields_Id" name="hiddenFields" form="uploaderId" class="hiddenFieldset" title="">
                <input id="inspectedFilename_Id" name="inspectedFilename" type="hidden" value="">
                <input id="csrf-token_Id" name="csrf-token" type="hidden" value="<%= csrfToken  %>">
            </fieldset>
            <fieldset id="tagSelect_Id" name="tagSelect" form="uploaderId" class="tagSelect" title="Metadata to display">
                <legend>Step 1a: View Image Metadata Tags</legend>
                <label for="full_Id" class="radioLabel">Full metadata
                    <input id="full_Id" name="tagSet" type="radio" value="Full" tabeindex="0"> 
                </label>
                <label for="xmp_Id" class="radioLabel">Just Adobe XMP
                    <input id="xmp_Id" name="tagSet" type="radio" value="XMP" tabeindex="0">
                </label>
                <label for="location_Id" class="radioLabel">Just location metadata
                    <input id="location_Id" name="tagSet" type="radio" value="Location" tabeindex="0">
                </label>
                <label for="car_Id" class="radioLabel">Just Content &amp; Rights
                    <input id="car_Id" name="tagSet" type="radio" value="CAR" tabeindex="0">
                </label>
            </fieldset>
            <span class="or">or</span>
            <fieldset id="tagEditSelect_Id" name="tagEditSelect" form="uploaderId" class="tagSelect" title="Metadata to edit">
                <legend>Step 1b: Clear Image Metadata Tags</legend>
                <label for="stripAllTags_Id" class="radioLabel">Clear all tags
                    <input id="stripAllTags_Id" name="tagSet" type="radio" value="StripAllTags" tabindex="0">
                </label>
                <label for="stripLocationTags_Id" class="radioLabel">Clear just location tags
                    <input id="stripLocationTags_Id" name="tagSet" type="radio" value="StripLocation" tabindex="0">
                </label>
            </fieldset>
            <h3 id="step2">Step 2: Then, select your local image file.</h3>
            <fieldset id="filesId" name="files" form="uploaderId" class="" title="Upload image to inspect" tabeindex="0">
                <legend>Step 2a: Upload an image to inspect its metadata.</legend>
                <div id="dragzone">
                    <h2>Drop a photo here to inspect its metadata.</h2>
                    <br>
                    <input id="image_0Id" name="image_0" type="file" accept=".png,.jpg,.jpeg,.heic,.webp">
                </div>
            </fieldset>
            <span class="or">or</span>
            <fieldset id="urlInspectId" name="urlInspect" form="uploaderId" class="urlFieldset" title="Paset URL to image to inspect">
                <legend>Step 2b: Find an image online.</legend>
                <label for="url_Id">URL of an image to inspect:
                    <input id="url_Id" name="url" type="text" value="" tabeindex="0">
                </label>
                <input id="submit_Id" name="submit" type="submit" value="Inspect Image" tabindex="0">
            </fieldset>
        </form>
    </section>
    <h3 id="step3">Step 3: Finally, your image metadata will display here.</h3>
    <section id="metadataSection">
        <div id="infozone" class="hidden">
            <h3 class="mono">File Information</h3>
        </div>
        <div id="mapzone" class="hidden">
        </div>
        <div id="contentzone" class="hidden">
            <h3 class="mono">Content, Attributions, and Rights</h3>
        </div>
        <div id="metazone" class="hidden">
            <h3 class="mono">Camera, Exposure, and Software Information</h3>
        </div>
        <div id="xmpzone" class="hidden">
            <h3 class="mono">XMP, Adobe Develop and Presets</h3>
        </div>
    </section>
    <script
          src="https://cdn.apple-mapkit.com/mk/5.x.x/mapkit.core.js"
          crossorigin async
          data-callback="initMapKit"
          data-libraries="full-map,services"
          data-initial-token=""
          nonce="<%= nonce %>"
        ></script>
    <script nonce="<%= nonce %>" type="module">
        let origin = '<%= origin %>'
        let access = '<%= accessToken %>'
        <% if (locals?.metadata !== undefined) { %>
        window.metadata = <%- metadata %>
        if (window.metadata.status === 404) {
            const expiredLinkText = `Sorry, but the link to review ${window.metadata.file}'s metadata has expired.`
            const expiredLinkP = document.createElement('p')
            expiredLinkP.textContent = expiredLinkText
            const h3s = document.querySelectorAll('h3')
            h3s[2].parentElement.insertBefore(expiredLinkP, h3s[2].nextSibling)
         } else {
            document.addEventListener('DOMContentLoaded', (e) => {
                setFileInfo(null, window.metadata)
            })
        }
        <% } %>
    </script>
    <script src="<%=origin %>j/m.js" nonce="<%= nonce %>" type="module">
    </script>
